#!/usr/bin/env python3

from flask import Flask
import inspect
import os
from typing import Dict
import dms2122frontend
from dms2122frontend.data.config import FrontendConfiguration
from dms2122frontend.data.rest import AuthService, BackendService
from dms2122frontend.presentation.web import \
    AdminEndpoints, CommonEndpoints, SessionEndpoints, StudentEndpoints, TeacherEndpoints

cfg: FrontendConfiguration = FrontendConfiguration()
cfg.load_from_file(cfg.default_config_file())
auth_service_cfg: Dict = cfg.get_auth_service()
auth_service: AuthService = AuthService(
    auth_service_cfg['host'], auth_service_cfg['port'],
    apikey_header='X-ApiKey-Auth',
    apikey_secret=auth_service_cfg['apikey_secret']
)
backend_service_cfg: Dict = cfg.get_backend_service()
backend_service: BackendService = BackendService(
    backend_service_cfg['host'], backend_service_cfg['port'],
    apikey_header='X-ApiKey-Backend',
    apikey_secret=backend_service_cfg['apikey_secret']
)

app = Flask(
    __name__,
    static_folder=os.path.dirname(
        inspect.getfile(dms2122frontend)) + '/static',
    template_folder=os.path.dirname(
        inspect.getfile(dms2122frontend)) + '/templates'
)
app.secret_key = bytes(cfg.get_app_secret_key(), 'ascii')

# Login pages
@app.route("/login", methods=['GET'])
def get_login():
    return SessionEndpoints.get_login(auth_service)

@app.route("/login", methods=['POST'])
def post_login():
    return SessionEndpoints.post_login(auth_service)

@app.route("/logout", methods=['GET'])
def get_logout():
    return SessionEndpoints.get_logout()


# Home
@app.route("/home", methods=['GET'])
def get_home():
    return CommonEndpoints.get_home(auth_service)


# Student
@app.route("/student", methods=['GET'])
def get_student():
    return StudentEndpoints.get_student(auth_service)

@app.route("/sProgression", methods=['GET'])
def get_sProgression():
    return StudentEndpoints.get_sProgression(auth_service)

@app.route("/sQuestions", methods=['GET'])
def get_sQuestions():
    return StudentEndpoints.get_sQuestions(auth_service)


# Teacher
@app.route("/teacher", methods=['GET'])
def get_teacher():
    return TeacherEndpoints.get_teacher(auth_service)

@app.route("/tStudents", methods=['GET'])
def get_tStudents():
    return TeacherEndpoints.get_tStudents(auth_service)

@app.route("/tQuestions", methods=['GET'])
def get_tQuestions():
    return TeacherEndpoints.get_tQuestions(auth_service)

# Admin
@app.route("/admin", methods=['GET'])
def get_admin():
    return AdminEndpoints.get_admin(auth_service)

@app.route("/admin/users", methods=['GET'])
def get_admin_users():
    return AdminEndpoints.get_admin_users(auth_service)

@app.route("/admin/users/new", methods=['GET'])
def get_admin_users_new():
    return AdminEndpoints.get_admin_users_new(auth_service)

@app.route("/admin/users/new", methods=['POST'])
def post_admin_users_new():
    return AdminEndpoints.post_admin_users_new(auth_service)

@app.route("/admin/users/edit", methods=['GET'])
def get_admin_users_edit():
    return AdminEndpoints.get_admin_users_edit(auth_service)

@app.route("/admin/users/edit", methods=['POST'])
def post_admin_users_edit():
    return AdminEndpoints.post_admin_users_edit(auth_service)

if __name__ == '__main__':
    app.run(
        host=cfg.get_service_host(),
        port=cfg.get_service_port(),
        debug=cfg.get_debug_flag()
    )
