openapi: 3.0.0
info:
  title: DMS backend service REST API
  version: '1.0'
  description: |
    REST API for the backend service.
    This is part of the mandatory exercise.
    Dise√±o y Mantenimiento del Software
  contact:
    name: UBU
tags:
  - name: questions
    description: Questions operations
  - name: answers
    description: Answers operations
  - name: server
    description: Server operations
servers:
  - url: /api/v1
paths:
  '/':
    head:
      summary: Health test for the service
      operationId: dms2122backend.presentation.rest.server.health_test
      responses:
        '204':
          description: Success response (will not redirect)
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - server

  /answers:
    get:
      summary: All answers
      operationId: dms2122backend.presentation.rest.answer.allAnswers
      responses:
        '200':
          description: The list
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersAllList'
      tags:
        - questions
      security:
        - api_key: []

  /answers/{qid}:
    get:
      summary: Returns all answers from a particular question
      operationId: dms2122backend.presentation.rest.answer.answerListFromQuestion
      parameters:
        - name: qid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: All the asnwers
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersAllList'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: User without enought permissions
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []
  /answers/{username}:
    get:
      summary: Gets all answers from a user
      operationId: dms2122backend.presentation.rest.answer.answerListFromUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All the answers
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersAllList'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []
  /questions:
    get:
      summary: List of all the question.
      operationId: dms2122backend.presentation.rest.question.list_questions
      responses:
        '200':
          description: A list of questions.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionAllList'
      tags:
        - questions
      security:
        - api_key: []
  /question/create:
    post:
      summary: Create a new question
      operationId: dms2122backend.presentation.rest.question.create_question
      requestBody:
        description: Parameters.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionAll'
      responses:
        '200':
          description: Question data
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionAllById'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: User without enought permissions
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: Conflict with another question
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
  /question/{qid}:
    put:
      summary: Modifies a question
      operationId: dms2122backend.presentation.rest.question.modify_question
      parameters:
        - name: qid
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: data
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionAllById'
      responses:
        '200':
          description: New question data
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionAllById'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: User without enought permissions
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: Question not found or without any answer
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
    get:
      summary: Gets a question
      operationId: dms2122backend.presentation.rest.question.get_question_by_id
      parameters:
        - name: qid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Data.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionAllById'
        '400':
          description: Request error.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
  /question/{qid}/ans:
    get:
      summary: Returns if a question has any answers
      operationId: dms2122backend.presentation.rest.answer.questionHasAnswers
      parameters:
        - name: qid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Yes, it has at least one answer
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: User without enought permissions
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: Question not found or without any answer
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []
  /question/{qid}/ans/{username}:
    post:
      summary: User answer to a particular question
      operationId: dms2122backend.presentation.rest.answer.answer
      parameters:
        - name: qid
          in: path
          required: true
          schema:
            type: integer
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Answer data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AnswerAll'
      responses:
        '200':
          description: An answer has been found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswerAll'
        '400':
          description: Not enought parameters
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: User without enought permissions
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The user or the question does not been found
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []
    get:
      summary: Returns a questions answer
      operationId: dms2122backend.presentation.rest.answer.answerFromUserToQuestion
      parameters:
        - name: qid
          in: path
          required: true
          schema:
            type: integer
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All the answers to that question
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersAllList'
        '403':
          description: User without enought permissions
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []

  /questions/{username}/incompleted:
    get:
      summary: All incompleted questions of a user
      operationId: dms2122backend.presentation.rest.question.questionsIncompletedFromUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The questions
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionAllList'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []
  /questions/{username}/completed:
    get:
      summary: All incompleted questions of a user
      operationId: dms2122backend.presentation.rest.question.questionsCompletedFromUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The questions
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersAllList'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - api_key: []

  /statistics/users:
    get:
      summary: All users statistics
      operationId: dms2122backend.presentation.rest.statistics.usersStatistics
      responses:
        '200':
          description: The statistics
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserStatisticsList'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []

  /statistics/{username}:
    get:
      summary: User statistics
      operationId: dms2122backend.presentation.rest.statistics.userStatistics
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The statistics
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserStatistics'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []

  /statistics/questions:
    get:
      summary: Quest statistics
      operationId: dms2122backend.presentation.rest.statistics.questionsStatistics
      responses:
        '200':
          description: Question statistics
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionStatistics'
        '400':
          description: Request error
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - api_key: []



components:
  schemas:
    UserAll:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    UserAllPassword:
      allOf:
        - $ref: '#/components/schemas/UserAll'
        - type: object
          properties:
            password:
              type: string
          required:
            - password
    UserAllList:
      type: array
      items:
        $ref: '#/components/schemas/UserAll'

    AnswerAll:
      type: object
      properties:
        username:
          type: string
        id:
          type: integer
        qid:
          type: integer
      required:
        - username
        - id
        - qid
    AnswersAllList:
      type: array
      items:
        $ref: '#/components/schemas/AnswerAll'

    QuestionAll:
      type: object
      properties:
        title:
          type: string
        desc:
          type: string
        c_1:
          type: string
        c_2:
          type: string
        c_3:
          type: string
        c_4:
          type: string
        c_right:
          type: integer
        puntuation:
          type: number
        penalization:
          type: number
      required:
        - title
        - desc
        - c_1
        - c_2
        - c_3
        - c_4
        - c_right
        - puntuation
        - penalization
    QuestionAllById:
      type: object
      properties:
        qid:
          type: integer
        title:
          type: string
        desc:
          type: string
        c_1:
          type: string
        c_2:
          type: string
        c_3:
          type: string
        c_4:
          type: string
        c_right:
          type: integer
        puntuation:
          type: number
        penalization:
          type: number
        answered:
          type: integer
      required:
        - qid
        - title
        - desc
        - c_1
        - c_2
        - c_3
        - c_4
        - c_right
        - puntuation
        - penalization
    QuestionAllList:
      type: array
      items:
        $ref: '#/components/schemas/QuestionAllById'
    
    CompletedQuestion:
      type: object
      properties:
        qid:
          type: integer
        title:
          type: string
        desc:
          type: string
        c_1:
          type: string
        c_2:
          type: string
        c_3:
          type: string
        c_4:
          type: string
        c_right:
          type: integer
        puntuation:
          type: number
        penalization:
          type: number
        result:
          type: number
      required:
        - qid
        - title
        - desc
        - c_1
        - c_2
        - c_3
        - c_4
        - c_right
        - puntuation
        - penalization
    CompletedQuestionList:
      type: array
      items:
        $ref: '#/components/schemas/CompletedQuestion'

    UserStatistics:
      type: object
      properties:
        nAnswers:
          type: integer
        uScore:
          type: number
        scoreCompleted:
          type: number
        totalScore:
          type: number
        username:
          type: string
      required:
        - nAnswers
        - uScore
        - scoreCompleted
        - totalScore
    UserStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/UserStatistics'

    QuestionStatistics:
      type: object
      properties:
        n_answers:
          type: integer
        n_c1:
          type: integer
        n_c2:
          type: integer
        n_c3:
          type: integer
        n_c4:
          type: integer             
        avg:
          type: number
        title:
          type: string
      required:
        - n_answers
        - n_c1
        - n_c2
        - n_c3
        - n_c4
        - avg
    QuestionStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/QuestionStatistics'
  

  securitySchemes:
    api_key:
      type: apiKey
      name: X-ApiKey-Backend
      in: header
      x-apikeyInfoFunc: dms2122backend.presentation.rest.security.verify_api_key



